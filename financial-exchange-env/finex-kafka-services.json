{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "String"
        }
    },    
    "Mappings": {
        "RegionToAMIMap": {
            "us-east-1": {
                "AMI": "ami-0323c3dd2da7fb37d"
            },
            "us-east-2": {
                "AMI": "ami-0f7919c33c90f5b58"
            },
            "us-west-1": {
                "AMI": "ami-06fcc1f0bc2c8943f"
            },
            "us-west-2": {
                "AMI": "ami-0d6621c01e8c2de2c"
            }
        }
    },
    "Resources" : {
        "FinexKafkaSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Kafka services security group",
                "GroupName" : "FinexKafkaSg",
                "VpcId" : { 
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexVpcId" 
                    } 
                },
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : "FinexKafkaSecurityGroup"
                    }, {
                        "Key" : "Cloudformation",
                        "Value" : "Yes"
                    }
                ]
            }
        },
        "FinexKafkaSecurityGroupIngressPort22" : {
            "Type" : "AWS::EC2::SecurityGroupIngress",
            "DependsOn" : "FinexKafkaSecurityGroup",
            "Properties" : {
                "FromPort" : 22,
                "IpProtocol" : "tcp",
                "ToPort" : 22,
                "GroupId" : {
                    "Ref" : "FinexKafkaSecurityGroup"
                },
                "SourceSecurityGroupId" : { 
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexPubSgId" 
                    }
                }
            }     
        },
        "FinexKafkaSecurityGroupIngressPort2181" : {
            "Type" : "AWS::EC2::SecurityGroupIngress",
            "DependsOn" : "FinexKafkaSecurityGroup",
            "Properties" : {
                "CidrIp" : "0.0.0.0/0",
                "FromPort" : 2181,
                "IpProtocol" : "tcp",
                "ToPort" : 2181,
                "GroupId" : {
                    "Ref" : "FinexKafkaSecurityGroup"
                }
            }
        },
        "FinexKafkaSecurityGroupIngressPort2182" : {
            "Type" : "AWS::EC2::SecurityGroupIngress",
            "DependsOn" : "FinexKafkaSecurityGroup",
            "Properties" : {
                "CidrIp" : "0.0.0.0/0",
                "FromPort" : 2182,
                "IpProtocol" : "tcp",
                "ToPort" : 2182,
                "GroupId" : {
                    "Ref" : "FinexKafkaSecurityGroup"
                }
            }
        },
        "FinexKafkaSecurityGroupIngressPort9092" : {
            "Type" : "AWS::EC2::SecurityGroupIngress",
            "DependsOn" : "FinexKafkaSecurityGroup",
            "Properties" : {
                "CidrIp" : "0.0.0.0/0",
                "FromPort" : 9092,
                "IpProtocol" : "tcp",
                "ToPort" : 9092,
                "GroupId" : {
                    "Ref" : "FinexKafkaSecurityGroup"
                }
            }
        },
        "FinexKafkaSecurityGroupEgress" : {
            "Type" : "AWS::EC2::SecurityGroupEgress",
            "Properties" : {
                "CidrIp" : "0.0.0.0/0",
                "IpProtocol" : "-1",
                "GroupId" : {
                    "Ref" : "FinexKafkaSecurityGroup"
                }
            }
        },
        "FinexZookeeper1Zone1" : {
            "Type" : "AWS::EC2::Instance",
            "DependsOn" : "FinexKafkaSecurityGroup",
            "Properties" : {
                "AvailabilityZone" : {
                    "Fn::Join" : [ "", [
                        {
                            "Ref" : "AWS::Region"
                        },
                        "a"
                    ] 
                ]
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionToAMIMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },          
                "KeyName" : { 
                    "Ref" : "KeyName"
                },
                "SecurityGroupIds" : [{
                    "Ref" : "FinexKafkaSecurityGroup"
                } ], 
                "SubnetId" : { 
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexAppSubnetIdZone1" 
                    }
                },
                "InstanceType" : "t2.small",
                "IamInstanceProfile" : "AdminAccess",
                "Tags" : [ { 
                        "Key" : "Name",
                        "Value" : "finex-zookeeper-1-zone1"
                    }, {
                        "Key" : "Cloudformation",
                        "Value" : "Yes"
                    }
                ],
                "UserData" : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -ex", "\n",
                                "yum update -y", "\n",
                                "yum install java-1.8.0-openjdk -y", "\n",
                                "wget https://archive.apache.org/dist/kafka/2.2.1/kafka_2.12-2.2.1.tgz", "\n",
                                "tar -xzf kafka_2.12-2.2.1.tgz", "\n",
                                "mv kafka_2.12-2.2.1 ~ec2-user/", "\n",
                                "rm kafka_2.12-2.2.1.tgz", "\n",
                                "chown -R ec2-user ~ec2-user/kafka_2.12-2.2.1", "\n",
                                "chgrp -R ec2-user ~ec2-user/kafka_2.12-2.2.1", "\n",
                                "mkdir ~ec2-user/zookeeper-data", "\n",
                                "chown -R ec2-user ~ec2-user/zookeeper-data", "\n",
                                "chgrp -R ec2-user ~ec2-user/zookeeper-data", "\n",
                                "sed -i \"s/dataDir=.*/dataDir=\\/home\\/ec2-user\\/zookeeper-data\\//\" /home/ec2-user/kafka_2.12-2.2.1/config/zookeeper.properties", "\n",
                                "sed -i \"s/log4j.rootLogger=.*kafkaAppender/log4j.rootLogger=INFO, kafkaAppender/\" /home/ec2-user/kafka_2.12-2.2.1/config/log4j.properties", "\n",
                                "su ec2-user", "\n",
                                "/home/ec2-user/kafka_2.12-2.2.1/bin/zookeeper-server-start.sh /home/ec2-user/kafka_2.12-2.2.1/config/zookeeper.properties &", "\n",
                                "\n"
                            ]
                        ]
                    }
                }
            }
        }, 
        "FinexZookeeper1Zone2" : {
            "Type" : "AWS::EC2::Instance",
            "DependsOn" : "FinexZookeeper1Zone1",
            "Properties" : {
                "AvailabilityZone" : {
                    "Fn::Join" : [ "", [
                        {
                            "Ref" : "AWS::Region"
                        },
                        "b"
                    ] 
                ]
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionToAMIMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },          
                "KeyName" : { 
                    "Ref" : "KeyName"
                },
                "SecurityGroupIds" : [{
                    "Ref" : "FinexKafkaSecurityGroup"
                } ], 
                "SubnetId" : { 
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexAppSubnetIdZone2" 
                    }
                },
                "InstanceType" : "t2.small",
                "IamInstanceProfile" : "AdminAccess",
                "Tags" : [ { 
                        "Key" : "Name",
                        "Value" : "finex-zookeeper-1-zone-2"
                    }, {
                        "Key" : "Cloudformation",
                        "Value" : "Yes"
                    }
                ],
                "UserData" : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -ex", "\n",
                                "yum update -y", "\n",
                                "yum install java-1.8.0-openjdk -y", "\n",
                                "wget https://archive.apache.org/dist/kafka/2.2.1/kafka_2.12-2.2.1.tgz", "\n",
                                "tar -xzf kafka_2.12-2.2.1.tgz", "\n",
                                "mv kafka_2.12-2.2.1 ~ec2-user/", "\n",
                                "rm kafka_2.12-2.2.1.tgz", "\n",
                                "chown -R ec2-user ~ec2-user/kafka_2.12-2.2.1", "\n",
                                "chgrp -R ec2-user ~ec2-user/kafka_2.12-2.2.1", "\n",
                                "mkdir ~ec2-user/zookeeper-data", "\n",
                                "chown -R ec2-user ~ec2-user/zookeeper-data", "\n",
                                "chgrp -R ec2-user ~ec2-user/zookeeper-data", "\n",
                                "sed -i \"s/dataDir=.*/dataDir=\\/home\\/ec2-user\\/zookeeper-data\\//\" /home/ec2-user/kafka_2.12-2.2.1/config/zookeeper.properties", "\n",
                                "sed -i \"s/log4j.rootLogger=.*kafkaAppender/log4j.rootLogger=INFO, kafkaAppender/\" /home/ec2-user/kafka_2.12-2.2.1/config/log4j.properties", "\n",
                                "su ec2-user", "\n",
                                "/home/ec2-user/kafka_2.12-2.2.1/bin/zookeeper-server-start.sh /home/ec2-user/kafka_2.12-2.2.1/config/zookeeper.properties &", "\n",
                                "\n"
                            ]
                        ]
                    }
                }
            }
        }, 
        "FinexKafka1Zone1" : {
            "Type" : "AWS::EC2::Instance",
            "DependsOn" : "FinexZookeeper1Zone2",
            "Properties" : {
                "AvailabilityZone" : {
                    "Fn::Join" : [ "", [
                        {
                            "Ref" : "AWS::Region"
                        },
                        "a"
                    ] 
                ]
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionToAMIMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },          
                "KeyName" : { 
                    "Ref" : "KeyName"
                },
                "SecurityGroupIds" : [{
                    "Ref" : "FinexKafkaSecurityGroup"
                } ], 
                "SubnetId" : { 
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexAppSubnetIdZone1" 
                    }
                },
                "InstanceType" : "t2.small",
                "IamInstanceProfile" : "AdminAccess",
                "Tags" : [ { 
                        "Key" : "Name",
                        "Value" : "finex-kafka-1-zone1"
                    }, {
                        "Key" : "Cloudformation",
                        "Value" : "Yes"
                    }
                ],
                "UserData" : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -ex", "\n",
                                "yum update -y", "\n",
                                "yum install java-1.8.0-openjdk -y", "\n",
                                "wget https://archive.apache.org/dist/kafka/2.2.1/kafka_2.12-2.2.1.tgz", "\n",
                                "tar -xzf kafka_2.12-2.2.1.tgz", "\n",
                                "mv kafka_2.12-2.2.1 ~ec2-user/", "\n",
                                "rm kafka_2.12-2.2.1.tgz", "\n",
                                "chown -R ec2-user ~ec2-user/kafka_2.12-2.2.1", "\n",
                                "chgrp -R ec2-user ~ec2-user/kafka_2.12-2.2.1", "\n",
                                "mkdir ~ec2-user/kafka-logs", "\n",
                                "chown -R ec2-user ~ec2-user/kafka-logs", "\n",
                                "chgrp -R ec2-user ~ec2-user/kafka-logs", "\n",
                                "sed -i \"s/broker.id.*$/broker.id=1/\" /home/ec2-user/kafka_2.12-2.2.1/config/server.properties", "\n",
                                "sed -i \"s/\\#listeners=PLAINTEXT.*$/listeners=PLAINTEXT:\\/\\/:9092/\" /home/ec2-user/kafka_2.12-2.2.1/config/server.properties", "\n",
                                "adverstised_hostname=`curl http://169.254.169.254/latest/meta-data/local-ipv4`", "\n",
                                "sed -i \"s/\\#advertised.listeners.*$/advertised.listeners=PLAINTEXT:\\/\\/$adverstised_hostname:9092/\" /home/ec2-user/kafka_2.12-2.2.1/config/server.properties", "\n",
                                "sed -i \"s/log.dirs=.*$/log.dirs=\\/home\\/ec2-user\\/kafka-logs\\//\" /home/ec2-user/kafka_2.12-2.2.1/config/server.properties", "\n",
                                "sed -i \"s/zookeeper.connect=localhost:2181/zookeeper.connect=",
                                { "Fn::GetAtt" : [ "FinexZookeeper1Zone1", "PrivateIp" ] }, ":2181,",
                                { "Fn::GetAtt" : [ "FinexZookeeper1Zone2", "PrivateIp" ] }, ":2181", "/\"", 
                                " /home/ec2-user/kafka_2.12-2.2.1/config/server.properties", "\n",
                                "sed -i \"s/log4j.rootLogger=.*kafkaAppender/log4j.rootLogger=INFO, kafkaAppender/\" /home/ec2-user/kafka_2.12-2.2.1/config/log4j.properties", "\n",
                                "su ec2-user", "\n",
                                "/home/ec2-user/kafka_2.12-2.2.1/bin/kafka-server-start.sh /home/ec2-user/kafka_2.12-2.2.1/config/server.properties &", "\n",
                                "sleep 60", "\n",
                                "/home/ec2-user/kafka_2.12-2.2.1/bin/kafka-topics.sh --create --topic zipkin --bootstrap-server $adverstised_hostname:9092 --partitions 1 --replication-factor 1", "\n",
                                "\n"
                            ]
                        ]
                    }
                }
            }
        }, 
        "FinexKafka1Zone2" : {
            "Type" : "AWS::EC2::Instance",
            "DependsOn" : "FinexZookeeper1Zone2",
            "Properties" : {
                "AvailabilityZone" : {
                    "Fn::Join" : [ "", [
                        {
                            "Ref" : "AWS::Region"
                        },
                        "b"
                    ] 
                ]
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionToAMIMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },          
                "KeyName" : { 
                    "Ref" : "KeyName"
                },
                "SecurityGroupIds" : [{
                    "Ref" : "FinexKafkaSecurityGroup"
                } ], 
                "SubnetId" : { 
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexAppSubnetIdZone2" 
                    }
                },
                "InstanceType" : "t2.small",
                "IamInstanceProfile" : "AdminAccess",
                "Tags" : [ { 
                        "Key" : "Name",
                        "Value" : "finex-kafka-1-zone-2"
                    }, {
                        "Key" : "Cloudformation",
                        "Value" : "Yes"
                    }
                ],
                "UserData" : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -ex", "\n",
                                "yum update -y", "\n",
                                "yum install java-1.8.0-openjdk -y", "\n",
                                "wget https://archive.apache.org/dist/kafka/2.2.1/kafka_2.12-2.2.1.tgz", "\n",
                                "tar -xzf kafka_2.12-2.2.1.tgz", "\n",
                                "mv kafka_2.12-2.2.1 ~ec2-user/", "\n",
                                "rm kafka_2.12-2.2.1.tgz", "\n",
                                "chown -R ec2-user ~ec2-user/kafka_2.12-2.2.1", "\n",
                                "chgrp -R ec2-user ~ec2-user/kafka_2.12-2.2.1", "\n",
                                "mkdir ~ec2-user/kafka-logs", "\n",
                                "chown -R ec2-user ~ec2-user/kafka-logs", "\n",
                                "chgrp -R ec2-user ~ec2-user/kafka-logs", "\n",
                                "sed -i \"s/broker.id.*$/broker.id=1/\" /home/ec2-user/kafka_2.12-2.2.1/config/server.properties", "\n",
                                "sed -i \"s/\\#listeners=PLAINTEXT.*$/listeners=PLAINTEXT:\\/\\/:9092/\" /home/ec2-user/kafka_2.12-2.2.1/config/server.properties", "\n",
                                "adverstised_hostname=`curl http://169.254.169.254/latest/meta-data/local-ipv4`", "\n",
                                "sed -i \"s/\\#advertised.listeners.*$/advertised.listeners=PLAINTEXT:\\/\\/$adverstised_hostname:9092/\" /home/ec2-user/kafka_2.12-2.2.1/config/server.properties", "\n",
                                "sed -i \"s/log.dirs=.*$/log.dirs=\\/home\\/ec2-user\\/kafka-logs\\//\" /home/ec2-user/kafka_2.12-2.2.1/config/server.properties", "\n",
                                "sed -i \"s/zookeeper.connect=localhost:2181/zookeeper.connect=",
                                { "Fn::GetAtt" : [ "FinexZookeeper1Zone1", "PrivateIp" ] }, ":2181,",
                                { "Fn::GetAtt" : [ "FinexZookeeper1Zone2", "PrivateIp" ] }, ":2181", "/\"", 
                                " /home/ec2-user/kafka_2.12-2.2.1/config/server.properties", "\n",
                                "sed -i \"s/log4j.rootLogger=.*kafkaAppender/log4j.rootLogger=INFO, kafkaAppender/\" /home/ec2-user/kafka_2.12-2.2.1/config/log4j.properties", "\n",
                                "su ec2-user", "\n",
                                "/home/ec2-user/kafka_2.12-2.2.1/bin/kafka-server-start.sh /home/ec2-user/kafka_2.12-2.2.1/config/server.properties &", "\n",
                                "sleep 60", "\n",
                                "/home/ec2-user/kafka_2.12-2.2.1/bin/kafka-topics.sh --create --topic zipkin --bootstrap-server $adverstised_hostname:9092 --partitions 1 --replication-factor 1", "\n",
                                "\n"
                            ]
                        ]
                    }
                }
            }
        }, 
        "FinexZookeeper1Zone1DNSRecord" : {
            "Type" : "AWS::Route53::RecordSet",
            "DependsOn" : "FinexZookeeper1Zone1",
            "Properties" : {
                "HostedZoneId" : {
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexPrivateHostedZoneId" 
                    }
                },
                "Name" : "i1.z1.zookeeper.finex.com",
                "ResourceRecords" : [
                   {
                        "Fn::GetAtt" : [
                            "FinexZookeeper1Zone1",
                            "PrivateIp"
                        ]    
                   }
                ],
                "TTL" : "300",
                "Type" : "A"
             }
        },
        "FinexZookeeper1Zone2DNSRecord" : {
            "Type" : "AWS::Route53::RecordSet",
            "DependsOn" : "FinexZookeeper1Zone2",
            "Properties" : {
                "HostedZoneId" : {
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexPrivateHostedZoneId" 
                    }
                },
                "Name" : "i1.z2.zookeeper.finex.com",
                "ResourceRecords" : [
                   {
                        "Fn::GetAtt" : [
                            "FinexZookeeper1Zone2",
                            "PrivateIp"
                        ]    
                   }
                ],
                "TTL" : "300",
                "Type" : "A"
             }
        },
        "FinexKafka1Zone1DNSRecord" : {
            "Type" : "AWS::Route53::RecordSet",
            "DependsOn" : "FinexKafka1Zone1",
            "Properties" : {
                "HostedZoneId" : {
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexPrivateHostedZoneId" 
                    }
                },
                "Name" : "i1.z1.kafka.finex.com",
                "ResourceRecords" : [
                   {
                        "Fn::GetAtt" : [
                            "FinexKafka1Zone1",
                            "PrivateIp"
                        ]    
                   }
                ],
                "TTL" : "300",
                "Type" : "A"
             }
        },
        "FinexKafka1Zone2DNSRecord" : {
            "Type" : "AWS::Route53::RecordSet",
            "DependsOn" : "FinexKafka1Zone2",
            "Properties" : {
                "HostedZoneId" : {
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexPrivateHostedZoneId" 
                    }
                },
                "Name" : "i1.z2.kafka.finex.com",
                "ResourceRecords" : [
                   {
                        "Fn::GetAtt" : [
                            "FinexKafka1Zone2",
                            "PrivateIp"
                        ]    
                   }
                ],
                "TTL" : "300",
                "Type" : "A"
             }
        } 
    },
    "Outputs" : {
        "FinexKafka1Zone1Dns" : {
            "Description" : "Private DNS of the finex kafka 1 zone 1 instance",
            "Value" : {
                "Fn::GetAtt" : [
                    "FinexKafka1Zone1",
                    "PrivateDnsName"
                ]
            },
            "Export" : {
                "Name" : "FinexKafka1Zone1Dns" 
            }   
        },
        "FinexKafka1Zone2Dns" : {
            "Description" : "Private DNS of the finex kafka 1 zone 2 instance",
            "Value" : {
                "Fn::GetAtt" : [
                    "FinexKafka1Zone2",
                    "PrivateDnsName"
                ]
            },
            "Export" : {
                "Name" : "FinexKafka1Zone2Dns" 
            }   
        }

    }
}