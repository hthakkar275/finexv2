{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "String"
        },
        "DockerUsername": {
            "Description": "Dockerhub username for pulling docker images for the services",
            "Type": "String"
        }
    },    
    "Mappings": {
        "RegionToAMIMap": {
            "us-east-1": {
                "AMI": "ami-0323c3dd2da7fb37d"
            },
            "us-east-2": {
                "AMI": "ami-0f7919c33c90f5b58"
            },
            "us-west-1": {
                "AMI": "ami-06fcc1f0bc2c8943f"
            },
            "us-west-2": {
                "AMI": "ami-0d6621c01e8c2de2c"
            }
        }
    },
    "Resources" : {
        "FinexApiGatewaySvcZone1" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "AvailabilityZone" : {
                    "Fn::Join" : [ "", [
                        {
                            "Ref" : "AWS::Region"
                        },
                        "a"
                    ] 
                ]
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionToAMIMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },          
                "KeyName" : { 
                    "Ref" : "KeyName"
                },
                "SecurityGroupIds" : [{ 
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexAppSgId" 
                    }
                } ], 
                "SubnetId" : { 
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexAppSubnetIdZone1" 
                    }
                },
                "InstanceType" : "t2.micro",
                "IamInstanceProfile" : "AdminAccess",
                "Tags" : [ { 
                        "Key" : "Name",
                        "Value" : "finex-apigateway-svc-zone1"
                    }, {
                        "Key" : "Cloudformation",
                        "Value" : "Yes"
                    }
                ],
                "UserData" : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -ex", "\n",
                                "yum update -y", "\n",
                                "yum install docker -y", "\n",
                                "systemctl start docker", "\n",
                                "systemctl enable docker", "\n",
                                "usermod -aG docker ec2-user", "\n",
                                "yum install gcc -y", "\n",
                                "yum install python-pip -y", "\n",
                                "yum install postgresql-devel python-devel -y", "\n",
                                "pip install pgcli==2.2.0", "\n",
                                "docker pull ",
                                { "Ref" : "DockerUsername" },
                                "/finex-apigateway-aws:latest", "\n",
                                "echo \"#!/bin/bash\" >>  ~ec2-user/run-apigateway-svc.sh", "\n",
                                "echo \"docker run -d -p 8080:8080 ",
                                "-e spring_profiles=aws ",
                                "-e config_server_uri=http://", 
                                { "Fn::ImportValue" :  { "Fn::Sub": "FinexInternalAlbDnsName"  } }, " ",
                                "-e FINEX_DISCOVERY_URI=http://",
                                { "Fn::ImportValue" :  { "Fn::Sub": "FinexInternalAlbDnsName"  } }, "/eureka ",
                                "-e FINEX_DISCOVERY_CLIENT_IP=`curl -s http://169.254.169.254/latest/meta-data/local-ipv4` ",
                                "--name finex-apigateway ", 
                                { "Ref" : "DockerUsername" },
                                "/finex-apigateway-aws:latest\" >> ~ec2-user/run-apigateway-svc.sh", "\n",
                                "chown ec2-user ~ec2-user/run-apigateway-svc.sh", "\n",
                                "chgrp ec2-user ~ec2-user/run-apigateway-svc.sh", "\n",
                                "chmod 755 ~ec2-user/run-apigateway-svc.sh", "\n",
                                "~ec2-user/run-apigateway-svc.sh", "\n",
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "IntApiGatewaySvcTargetGrp" : {
            "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
            "DependsOn" : "FinexApiGatewaySvcZone1",
            "Properties" : {
                "HealthCheckEnabled" : true,
                "HealthCheckIntervalSeconds" : 30,
                "HealthCheckPath" : "/actuator/health",
                "HealthCheckPort" : "8080",
                "HealthCheckProtocol" : "HTTP",
                "HealthCheckTimeoutSeconds" : 5,
                "HealthyThresholdCount" : 5,
                "Matcher" : {
                    "HttpCode" : "200"
                },
                "Name" : "int-apigateway-svc-grp",
                "Port" : 8080,
                "Protocol" : "HTTP",
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : "int-apigateway-svc-grp"
                    }, {
                        "Key" : "Cloudformation",
                        "Value" : "Yes"
                    }
                ],
                "Targets" : [ {
                    "Id" : { "Ref" : "FinexApiGatewaySvcZone1" },
                    "Port" : 8080
                } ],
                "TargetType" : "instance",
                "UnhealthyThresholdCount" : 2,
                "VpcId" : { 
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexVpcId" 
                    } 
                }
            }
        }, 
        "InternalAlbListnerApiSvcRule" : {
            "Type" : "AWS::ElasticLoadBalancingV2::ListenerRule",
            "DependsOn" : "IntApiGatewaySvcTargetGrp",
            "Properties" : {
                "Actions" : [ {
                    "ForwardConfig" : {
                        "TargetGroups" : [ {
                            "TargetGroupArn" : { 
                                "Ref" : "IntApiGatewaySvcTargetGrp"                            
                            }
                        } ]
                    },
                    "Type" : "forward"
                } ],
                "Conditions" : [ {
                    "Field" : "path-pattern",
                    "PathPatternConfig" : {
                        "Values" : [
                            "/finex/internal/api/*",
                            "/finex/api/*"
                        ]
                    }
                } ],
                "ListenerArn" : { 
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "InternalAlbListenerArn" 
                    } 
                },
                "Priority" : 3
            }
        },
        "ExtApiGatewaySvcTargetGrp" : {
            "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties" : {
                "HealthCheckEnabled" : true,
                "HealthCheckProtocol" : "TCP",
                "Name" : "ext-apigateway-svc-grp",
                "Port" : 8080,
                "Protocol" : "TCP",
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : "ext-apigateway-svc-grp"
                    }, {
                        "Key" : "Cloudformation",
                        "Value" : "Yes"
                    }
                ],
                "Targets" : [ {
                    "Id" : { "Ref" : "FinexApiGatewaySvcZone1" },
                    "Port" : 8080
                } ],
                "TargetType" : "instance",
                "VpcId" : { 
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexVpcId" 
                    } 
                }
            }
        },
        "ExternalAlbListener" : {
            "Type" : "AWS::ElasticLoadBalancingV2::Listener",
            "DependsOn" : "ExtApiGatewaySvcTargetGrp",
            "Properties" : {
                "LoadBalancerArn" : { 
                    "Fn::ImportValue" :  {
                        "Fn::Sub": "FinexExternalAlbArn" 
                    } 
                },
                "DefaultActions" : [ {
                    "ForwardConfig" : {
                        "TargetGroups" : [ {
                            "TargetGroupArn" : { 
                                "Ref" : "ExtApiGatewaySvcTargetGrp"                            
                            }
                        } ]
                    },
                    "Type" : "forward"
                } ],
                "Port" : 80,
                "Protocol" : "TCP"
            }
        }
    }
}